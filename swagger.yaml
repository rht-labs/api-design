swagger: '2.0'

info:
  version: "0.6.0-alpha"
  title: Red Hat Open Innovation Labs API
  description: "A generic model to support automation at all levels of the application and infrastructure lifecycle."
  contact:
    name: "Red Hat Open Innovation Labs"
    url: "https://github.com/rht-labs/api-design"
    email: "rhc-open-innovation-labs@redhat.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

paths:
  /engagements:
    post:
      tags:
        - engagement
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: '`Engagement` object to save'
          required: true
          schema:
            $ref: "#/definitions/Engagement"
      responses:
        201:
          description: 'Created'
          headers:
            Location:
              type: string
              description: 'Relative path to created Engagement'
        400:
          description: 'Invalid `Engagement`'
          schema:
            $ref: '#/definitions/ErrorModel'
        500:
          description: 'Unexpected Server Error'
          schema:
            $ref: '#/definitions/ErrorModel'
    get:
      tags:
      - engagement
      parameters:
        -
          name: nameIncludes
          in: query
          description: selects results that contain the query string, case insensitive, in `Engagement.name`
          required: false
          type: string
        -
          name: size
          in: query
          description: number of results to return
          required: false
          type: integer
          format: int32
        -
          name: offset
          in: query
          description: offset in result set from beginning
          required: false
          type: integer
          format: int64
      responses:
        200:
          description: Collection of `Engagement` objects
          schema:
            title: Engagements
            type: array
            items:
              $ref: "#/definitions/Engagement"
        500:
          description: Unexpected Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
  /engagements/{id}:
    get:
      tags:
      - engagement
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: '`Engagement` of the given `id` returned'
          schema:
            $ref: "#/definitions/Engagement"
        404:
          description: '`Engagement` of the given `id` not found'
          schema:
            $ref: '#/definitions/ErrorModel'
        500:
          description: 'Unexpected Server Error'
          schema:
            $ref: '#/definitions/ErrorModel'
    put:
      tags:
        - engagement
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/Engagement"
      responses:
        201:
          description: 'Created New `Engagement`'
          headers:
            Location:
              type: string
              description: 'Relative path to created Engagement'
        204:
          description: '`Engagement` of Given `id` Updated'
          schema:
            $ref: "#/definitions/Engagement"
        400:
          description: 'Invalid `Engagement`'
          schema:
            $ref: '#/definitions/ErrorModel'
        500:
          description: 'Unexpected Server Error'
          schema:
            $ref: '#/definitions/ErrorModel'
    delete:
      tags:
        - engagement
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: '`Engagement` of the given `id` deleted'
          schema:
            $ref: "#/definitions/Engagement"
        404:
          description: '`Engagement` of the given `id` not found'
          schema:
            $ref: '#/definitions/ErrorModel'
        500:
          description: 'Unexpected Server Error'
          schema:
            $ref: '#/definitions/ErrorModel'

  /engagements/{id}/jenkinsfile:
    get:
      tags:
        - engagement
        - jenkinsfile
      produces:
        - text/plain
        - application/json
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
          format: int64
          description: "Identifies which engagement to use"
        -
          name: applicationName
          in: query
          required: true
          type: string
          description: "`Application` in the `Engagement` to produce the Jenkinsfile for"
        -
          name: declarative
          in: query
          type: boolean
          default: false
          description: "Whether to use [declarative syntax](https://jenkins.io/blog/2017/01/12/declarative-pipeline-beta-2/). Defaults to `false`"
      responses:
        200:
          description: "Successful response"
          schema:
            title: Jenkinsfile
            type: string
        400:
          description: 'Bad request'
          schema:
            $ref: '#/definitions/ErrorModel'
        404:
          description: '`Engagement` of the given `id` not found'
          schema:
            $ref: '#/definitions/ErrorModel'
        500:
          description: 'Unexpected Server Error'
          schema:
            $ref: '#/definitions/ErrorModel'
  /engagement-summaries:
    get:
      tags:
        - engagement-summary
      produces:
        - application/json
      parameters:
        -
          name: nameIncludes
          in: query
          description: selects results that contain the query string, case insensitive, in `EngagementSummary.name`
          required: false
          type: string
        -
          name: size
          in: query
          description: number of results to return
          required: false
          type: integer
          format: int32
        -
          name: offset
          in: query
          description: offset in result set from beginning
          required: false
          type: integer
          format: int64
      responses:
        200:
          description: Collection of `EngagementSummary` objects
          schema:
            title: EngagementSummaries
            type: array
            items:
              $ref: "#/definitions/EngagementSummary"
        500:
          description: Unexpected Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
definitions:
  Engagement:
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      start_date:
        type: string
        format: date
      end_date:
        type: string
        format: date
      openshift_clusters:
        type: array
        items:
          $ref: "#/definitions/OpenShiftCluster"
      users:
        type: array
        items:
          $ref: '#/definitions/User'
      user_groups:
        type: array
        items:
          $ref: '#/definitions/Group'
    required:
    - id
    - name
  EngagementSummary:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      start_date:
        type: string
        format: date
      end_date:
        type: string
        format: date
    required:
    - id
    - name
  OpenShiftCluster:
    type: object
    properties:
      id:
        type: integer
        format: int64
      labels:
        type: object
        additionalProperties:
          type: string
      openshift_resources:
        $ref: '#/definitions/OpenShiftResources'
      openshift_host_env:
        type: string
      image_registry:
        type: string
      persistent_volumes:
        type: array
        items:
          $ref: '#/definitions/PersistentVolume'
    required:
    - id
  PersistentVolume:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      capacity:
        type: integer
        format: int64
      access_modes:
        type: array
        items:
          type: string
          enum:
          - ReadWriteOnce
          - ReadOnlyMany
          - ReadWriteMany
      nfs_path:
        type: string
      nfs_server:
        type: string
      reclaim_policy:
        type: string
        enum:
        - Retain
        - Recycle
      labels:
        type: object
        additionalProperties:
          type: string
  OpenShiftResources:
    type: object
    properties:
      id:
        type: integer
        format: int64
      projects:
        type: array
        items:
          $ref: "#/definitions/Project"
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      email:
        type: string
        format: email
      first_name:
        type: string
      last_name:
        type: string
      user_name:
        type: string
      expiration_date:
        type: string
        format: date-time
    required:
    - email
    - user_name
  Project:
    type: object
    properties:
      id:
        type: integer
        format: int64
      display_name:
        type: string
      name:
        type: string
      environment_type:
        type: string
        enum:
        - build
        - promotion
      apps:
        type: array
        items:
          $ref: "#/definitions/Application"
      templates:
        type: array
        items:
          $ref: "#/definitions/Template"
      pipelines:
        type: array
        items:
          $ref: "#/definitions/Pipeline"
      group_to_role:
        type: array
        items:
          $ref: '#/definitions/GroupRoleMapping'
      user_to_role:
        type: array
        items:
          $ref: '#/definitions/RoleMapping'
      persistent_volume_claims:
        type: array
        items:
          $ref: '#/definitions/PersistentVolumeClaim'
    required:
    - name
  PersistentVolumeClaim:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      access_modes:
        type: array
        items:
          type: string
          enum:
          - ReadWriteOnce
          - ReadOnlyMany
          - ReadWriteMany
      storage:
        type: integer
        format: int64
      selector:
        $ref: '#/definitions/LabelSelector'
  LabelSelector:
    type: object
    properties:
      id:
        type: integer
        format: int64
      match_labels:
        type: object
        additionalProperties:
          type: string
  Application:
    type: object
    properties:
      id:
        type: integer
        format: int64
      base_image:
        type: string
      base_image_tag:
        type: string
      build_application_commands:
        type: array
        items:
          type: string
      build_tool:
        type: string
      build_image_commands:
        type: array
        items:
          type: string
      deploy_image_commands:
        type: array
        items:
          type: string
      context_dir:
        type: string
      scm_url:
        type: string
      scm_type:
        type: string
      scm_ref:
        type: string
      name:
        type: string
      labels:
        type: object
        additionalProperties:
          type: string
      environment_variables:
        type: object
        additionalProperties:
          type: string
      pvc_associations:
        type: array
        items:
          $ref: '#/definitions/PVCAssociation'
      routes:
        type: array
        items:
          $ref: '#/definitions/Route'
  Template:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      parameters:
        type: object
        additionalProperties:
          type: string
  Pipeline:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      imagestreams:
        type: array
        items:
          type: string
  Route:
    type: object
    discriminator: route_type
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      route_type:
        type: string
        enum:
        - edge
        - passthrough
        - reencrypt
        - default
      hostname:
        type: string
      port:
        type: integer
        format: int
      service:
        $ref: '#/definitions/Service'
    required:
    - route_type
  PassthroughRoute:
    allOf:
    - $ref: '#/definitions/Route'
    - type: object
  EdgeRoute:
    allOf:
    - $ref: '#/definitions/Route'
    - type: object
      properties:
        ca_cert:
          type: string
        cert:
          type: string
        insecure_policy:
          type: string
        key:
          type: string
        path:
          type: string
  ReencryptRoute:
    allOf:
    - $ref: '#/definitions/Route'
    - type: object
      properties:
        ca_cert:
          type: string
        cert:
          type: string
        dest_ca_cert:
          type: string
        insecure_policy:
          type: string
        key:
          type: string
        path:
          type: string
  Service:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      ports:
        type: array
        items:
          $ref: '#/definitions/Port'
  Port:
    type: object
    properties:
      id:
        type: integer
        format: int64
      port:
        type: integer
        format: int
      protocol:
        type: string
      target_port:
        type: integer
        format: int
    required:
    - port
    - protocol
    - target_port
  PVCAssociation:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      mount_path:
        type: string
      claim_type:
        $ref: '#/definitions/ClaimType'
  ClaimType:
    type: object
    properties:
      id:
        type: integer
        format: int64
      kind:
        type: string
        enum:
        - secret
        - claim
      name:
        type: string
  GroupRoleMapping:
    type: object
    properties:
      id:
        type: integer
        format: int64
      group:
        $ref: '#/definitions/Group'
      roles:
        type: array
        items:
          $ref: '#/definitions/Role'
    required:
    - group
    - roles
  Group:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      members:
        type: array
        items:
          $ref: '#/definitions/User'
    required:
    - name
  RoleMapping:
    type: object
    properties:
      id:
        type: integer
        format: int64
      user:
        $ref: '#/definitions/User'
      roles:
        type: array
        items:
          $ref: '#/definitions/Role'
    required:
    - user
    - roles
  Role:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    required:
    - name
  ErrorModel:
    type: object
    required:
    - message
    - code
    properties:
      message:
        type: string
      code:
        type: integer
        minimum: 100
        maximum: 600